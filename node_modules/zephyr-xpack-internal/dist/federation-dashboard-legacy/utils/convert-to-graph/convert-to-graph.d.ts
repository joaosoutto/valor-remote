/** Eslint-disable */
import { TopLevelPackage } from './validate-params';
import { XStatsChunk, XStatsModule } from '../../../xpack.types';
import { ConvertedGraph } from 'zephyr-edge-contract';
export interface ConvertToGraphParams {
    /** Application name in module federation config */
    name?: string;
    /** Required filename in React Native actual output js.bundle */
    filename?: string;
    /** Key of remotes as a string of arrays */
    remotes?: unknown;
    /**
     * Chunk of the remote entry,
     *
     * // TODO: in MF2 should it be js.bundle or mf-manifest.json?
     */
    federationRemoteEntry: XStatsChunk | undefined;
    /**
     * Module compilation results return from getStats(), typically includes all chunks and
     * modules needed for the build
     */
    modules?: XStatsModule[];
    /**
     * Shared packages in package.json, an Object of Record<string, any>, could be
     * `dependencies`, `devDependencies` or `optionalDependencies`
     */
    topLevelPackage: TopLevelPackage;
    /** PublicPath from getStats().toJson() */
    publicPath?: string;
    metadata: {
        remote?: string;
        source?: {
            url?: string;
        };
    };
    versionData?: never;
    /**
     * Either `development` or other development enviornment (`production`), default to
     * `development` if not specified
     */
    environment?: string;
    /** Computed version based on file hash and _options.versionStrategy // */
    version?: string;
    /** Date.now() if not specified */
    posted?: Date;
    /** 'default' if not specified, not sure what it does and what it's supposed to do */
    group?: string;
    functionRemotes: [file: string, applicationID: string, name: string][];
    /** Git sha */
    sha?: string;
    /** GetStats()'s hash */
    buildHash?: string;
    /**
     * Include referenced chunks in a remote, if the host app doesn't expose anything it
     * will be empty
     */
    chunkDependencies: unknown;
    /** Repack specific 'ios' | 'android' | 'web' | undefined */
    target?: 'ios' | 'android' | 'web' | undefined;
}
export declare function convertToGraph(params: ConvertToGraphParams): ConvertedGraph;
