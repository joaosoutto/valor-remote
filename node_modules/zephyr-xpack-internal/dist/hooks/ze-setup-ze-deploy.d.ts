import { ZephyrEngine } from 'zephyr-agent';
import type { Source } from 'zephyr-edge-contract';
import { XStats } from '../xpack.types';
interface DeployPluginOptions {
    pluginName: string;
    zephyr_engine: ZephyrEngine;
    wait_for_index_html?: boolean;
}
interface DeployCompiler {
    webpack: {
        Compilation: {
            PROCESS_ASSETS_STAGE_REPORT: number;
        };
    };
    hooks: {
        thisCompilation: {
            tap: (pluginName: string, cb: (compilation: DeployCompilation) => void) => void;
        };
    };
}
interface DeployCompilation {
    getStats: () => XStats;
    hooks: {
        processAssets: {
            tapPromise: (options: {
                name: string;
                stage: number;
            }, cb: (assets: Record<string, Source>) => Promise<void>) => void;
        };
    };
}
export declare function setupZeDeploy<T extends DeployPluginOptions, XCompiler extends DeployCompiler>(pluginOptions: T, compiler: XCompiler): void;
export {};
