"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchWithRetries = fetchWithRetries;
const debug_1 = require("../logging/debug");
async function fetchWithRetries(url, options = {}, retries = 3) {
    for (let attempt = 1; attempt <= retries; attempt++) {
        try {
            const response = await fetch(url, options);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response;
        }
        catch (err) {
            const error = err;
            if (attempt === retries) {
                (0, debug_1.ze_log)('Max retries reached. Request failed:', error.message);
                throw err;
            }
            if (error.code === 'EPIPE' || error.message.includes('network')) {
                (0, debug_1.ze_log)(`Attempt ${attempt} failed due to network issue, retrying...`);
            }
            else {
                (0, debug_1.ze_log)(`Attempt ${attempt} failed with error:`, error.message);
                throw error;
            }
        }
    }
    throw new Error('Network error: Max retries reached');
}
//# sourceMappingURL=fetch-with-retries.js.map